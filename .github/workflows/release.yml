name: Create Signed Release

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      release_notes:
        description: 'Release notes'
        required: false
        default: 'New release'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode Keystore
        if: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/keystore.jks

      - name: Build Signed Release APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -f "app/keystore.jks" ]; then
            ./gradlew assembleRelease
          else
            echo "⚠️ No keystore found, building unsigned release"
            ./gradlew assembleRelease --continue || true
          fi

      - name: Sign APK (if keystore available)
        if: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "✅ APK signed successfully"
          ls -la app/build/outputs/apk/release/

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk-${{ github.event.inputs.version_name }}
          path: app/build/outputs/apk/release/app-release*.apk

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: app/build/outputs/apk/release/app-release*.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ github.event.inputs.version_name }}
          name: Release v${{ github.event.inputs.version_name }}
          body: |
            ## 🚀 Release v${{ github.event.inputs.version_name }}
            
            ${{ github.event.inputs.release_notes }}
            
            ### Download
            📱 **APK File:** app-release.apk
            
            ### Build Information
            - **Version:** ${{ github.event.inputs.version_name }}
            - **Commit:** ${{ github.sha }}
            - **Build Date:** ${{ steps.date.outputs.date }}
            - **Signed:** ${{ secrets.KEYSTORE_BASE64 && '✅ Yes' || '❌ No (Debug signing)' }}
            
            ### Installation
            1. Download the APK file
            2. Enable "Install from unknown sources" in your Android settings
            3. Install the APK
            
            > **Note:** If this is an unsigned build, you may need to uninstall previous versions first.
          draft: false
          prerelease: false